@page "/forgotpassword"
@using Lunatic.UI.Services
@using Lunatic.UI.Auth
@using Lunatic.UI.ViewModels
@using Lunatic.UI.Contracts
@using Microsoft.AspNetCore.Components.Authorization
@inject NavigationManager navigationManager
@inject CustomStateProvider authStateProvider
@inject ITokenService TokenService
@inject IAuthenticationService AuthenticationService

<h3>Forgot Password</h3>
<head>
    <meta charset="UTF-8">
    <link rel="stylesheet" href="css\forgotPassword.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" integrity="sha384-SZXxX4whJ79/gErwcOYf+zWLeJdY/qpuqC4cAa9rOGUstPomtqpuNWT9wdPEn2fk" crossorigin="anonymous">


</head>
<body>
    <p>help </p>
    @if (!IsResetSent)
    {
        <div class="forgot-password-form">
            <div class="form-group">
                <label for="email">Email</label>
                <input type="email" id="email" class="form-control" @bind="Email" />
            </div>
            <button class="btn btn-primary" @onclick="SendResetPasswordEmail">Reset Password</button>
            @if (!string.IsNullOrEmpty(ErrorMessage))
            {
                <p class="text-danger">@ErrorMessage</p>
            }
        </div>
    }
    else if (!IsPasswordChanged)
    {
        <div class="reset-password-form">
            <div class="form-group">
                <label for="password">New Password</label>
                <input type="password" id="password" class="form-control" @bind="NewPassword" />
            </div>
            <div class="form-group">
                <label for="confirmPassword">Confirm New Password</label>
                <input type="password" id="confirmPassword" class="form-control" @bind="ConfirmNewPassword" />
            </div>
            <button class="btn btn-primary" @onclick="ConfirmPasswordChange">Change Password</button>
            @if (!string.IsNullOrEmpty(ErrorMessage))
            {
                <p class="text-danger">@ErrorMessage</p>
            }
        </div>
    }
    else
    {
        <p>Password has been successfully changed. You can now <a href="/login">login</a> with your new password.</p>
    }
</body>
@code {
    private string Email { get; set; }
    private string NewPassword { get; set; }
    private string ConfirmNewPassword { get; set; }
    private bool IsResetSent { get; set; } = false;
    private bool IsPasswordChanged { get; set; } = false;
    private string ErrorMessage { get; set; }

    private async Task SendResetPasswordEmail()
    {
        ErrorMessage = string.Empty;

        var response = await AuthenticationService.ResetPassword(Email);

        if (response.Success)
        {
            IsResetSent = true;
        }
        else
        {
            ErrorMessage = "Failed to send reset password email. Please try again.";
        }
    }

    private async Task ConfirmPasswordChange()
    {
        ErrorMessage = string.Empty;

        if (NewPassword != ConfirmNewPassword)
        {
            ErrorMessage = "Passwords do not match.";
            return;
        }

        var response = await AuthenticationService.ConfirmPassword(Email, NewPassword);

        if (response.Success)
        {
            IsPasswordChanged = true;
        }
        else
        {
            ErrorMessage = "Failed to change password. Please try again.";
        }
    }
}
