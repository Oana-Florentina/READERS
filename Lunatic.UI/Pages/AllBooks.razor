@page "/allBooks"
@using Lunatic.UI.Contracts
@using Lunatic.UI.ViewModels

<h3>All Books</h3>

<br />

<p><input class="custom-checkbox" type="checkbox" id="includeHistory" @onchange="OnIncludeHistoryChanged" />   Include past events?</p>

@if (Books == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table>
        <thead>
            <tr>
                <th>Book name</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var book in Books)
            {
                <tr>
                    <!-- Main Book Information -->
                    <td colspan="2">
                        <div class="book-info">
                            <strong>Title:</strong> @book.Title <br />
                            <strong>Author:</strong> @book.Author <br />
                            <strong>Year:</strong> @book.Year <br />
                            <strong>Description:</strong> @book.Description <br />
                            <strong>Average Score:</strong> @book.AverageScore <br />
                            <strong>Genres:</strong>
                            @if (book.Genres != null && book.Genres.Any())
                            {
                                @foreach (var genre in book.Genres)
                                {
                                    @genre.ToString() <span>,</span>
                                }
                            }
                            else
                            {
                                <span>No genres available</span>
                            }
                            <br />
                        </div>
                    </td>
                </tr>
                <tr>
                    <td colspan="2">
                        <table class="nested-table ms-auto me-auto">
                            <thead>
                                <tr>
                                    <th>Rating ID</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (book.Ratings != null && book.Ratings.Any())
                                {
                                    @foreach (var ratingId in book.Ratings)
                                    {
                                        <tr>
                                            <td class="rating-id">@ratingId</td>
                                        </tr>
                                    }
                                }
                                else
                                {
                                    <tr>
                                        <td colspan="1" class="text-center">No ratings available</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </td>
                </tr>
            }

        </tbody>
    </table>
}

@code {
    [Inject]
    public IBookDataService? BookDataService { get; set; }

    [Inject]
    public NavigationManager? NavigationManager { get; set; }

    public List<BookViewModel>? Books { get; set; }
}

@functions {
    protected override async Task OnInitializedAsync()
    {
        Books = (await BookDataService!.GetBooksAsync()).ToList();
    }

    private void OnIncludeHistoryChanged(ChangeEventArgs e)
    {
        if ((bool)e.Value!)
        {
            NavigationManager!.NavigateTo("/allBooks?includeHistory=true");
        }
        else
        {
            NavigationManager!.NavigateTo("/allBooks");
        }
    }
}
