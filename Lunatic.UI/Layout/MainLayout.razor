@using Lunatic.UI.Auth
@using Lunatic.UI.Contracts
@using Microsoft.AspNetCore.Components.Authorization
@inject NavigationManager navigationManager
@inject CustomStateProvider authStateProvider
@inject ITokenService TokenService
@inherits LayoutComponentBase

<div class="page">
    @if (!IsLoginPage && !IsRegisterPage && !IsForgotPassword)
    {
        <div class="sidebar">
            <NavMenu />
        </div>
    }

    <main>
        <article class="content px-4">
            @Body
        </article>
    </main>
</div>

@code {
    private bool IsLoginPage => navigationManager.Uri.EndsWith("/login", StringComparison.OrdinalIgnoreCase);
    private bool IsRegisterPage => navigationManager.Uri.EndsWith("/register", StringComparison.OrdinalIgnoreCase);
    private bool IsForgotPassword => navigationManager.Uri.EndsWith("/forgotpassword", StringComparison.OrdinalIgnoreCase);
    protected override async Task OnInitializedAsync()
    {
        var token = await TokenService.GetTokenAsync();
        Console.WriteLine($"Token: {token}");
        if (token == null && !IsLoginPage && !IsRegisterPage && !IsForgotPassword)
        {
            navigationManager.NavigateTo("/login");
        }
    }
}
